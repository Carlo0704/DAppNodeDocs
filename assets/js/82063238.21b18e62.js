"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[9984],{4137:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=r,k=d["".concat(p,".").concat(u)]||d[u]||m[u]||i;return t?a.createElement(k,o(o({ref:n},c),{},{components:t})):a.createElement(k,o({ref:n},c))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(4137));const i={},o="Docker compose file",l={unversionedId:"dev/references/docker-compose",id:"dev/references/docker-compose",title:"Docker compose file",description:"Dappnode packages are built upon Docker containers. The heart of defining how these containers run and interact lies in the docker-compose.yml file. In this guide, we will explain the typical structure of the docker-compose.yml file for a Dappnode package.",source:"@site/docs/dev/references/docker-compose.md",sourceDirName:"dev/references",slug:"/dev/references/docker-compose",permalink:"/docs/dev/references/docker-compose",draft:!1,editUrl:"https://github.com/dappnode/DappnodeDocs/docs/dev/references/docker-compose.md",tags:[],version:"current",frontMatter:{},sidebar:"devSidebar",previous:{title:"Main commands",permalink:"/docs/dev/sdk/commands"},next:{title:"Dappnode Package (DNP) manifest",permalink:"/docs/dev/references/manifest"}},p={},s=[{value:"Basic Example",id:"basic-example",level:2},{value:"Complex Example",id:"complex-example",level:2},{value:"Notable Features",id:"notable-features",level:3},{value:"Environment Variables",id:"environment-variables",level:4},{value:"The <code>UPSTREAM_VERSION</code> Argument",id:"the-upstream_version-argument",level:4},{value:"The <code>EXTRA_OPTS</code> Environment Variable",id:"the-extra_opts-environment-variable",level:4}],c={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker-compose-file"},"Docker compose file"),(0,r.kt)("p",null,"Dappnode packages are built upon Docker containers. The heart of defining how these containers run and interact lies in the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file. In this guide, we will explain the typical structure of the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file for a Dappnode package."),(0,r.kt)("h2",{id:"basic-example"},"Basic Example"),(0,r.kt)("p",null,"A simple ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.5"\nservices:\n  test.public.dappnode.eth:\n    build: .\n    image: "test.public.dappnode.eth:0.1.0"\n    restart: unless-stopped\n')),(0,r.kt)("p",null,"This example illustrates the basic elements, which include the version of the docker-compose file, services, and the service's basic attributes."),(0,r.kt)("h2",{id:"complex-example"},"Complex Example"),(0,r.kt)("p",null,"A more intricate ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file could look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.5"\nservices:\n  beacon-chain:\n    build:\n      context: beacon-chain\n      args:\n        UPSTREAM_VERSION: v4.0.7\n    volumes:\n      - "beacon-chain-data:/data"\n    ports:\n      - "12603:12603/tcp"\n      - "12603:12603/udp"\n    restart: unless-stopped\n    environment:\n      P2P_PORT: 12603\n      CHECKPOINT_SYNC_URL: "https://checkpoints.mainnet.lukso.network"\n      EXTRA_OPTS: ""\n      LOG_VERBOSITY: info\n      MIN_SYNC_PEERS: "0"\n      MAX_PEERS: "250"\n      SUBSCRIBE_ALL_SUBNETS: "true"\n  validator:\n    build:\n      context: validator\n      args:\n        UPSTREAM_VERSION: v4.0.7\n    volumes:\n      - "validator-data:/data"\n    restart: unless-stopped\n    environment:\n      LOG_VERBOSITY: info\n      GRAFFITI: validating_from_DAppNode\n      ENABLE_DOPPELGANGER: "true"\n      EXTRA_OPTS: ""\nvolumes:\n  beacon-chain-data: {}\n  validator-data: {}\n')),(0,r.kt)("p",null,"In the complex example, you'll find:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Multiple services (like ",(0,r.kt)("inlineCode",{parentName:"li"},"beacon-chain")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"validator"),")."),(0,r.kt)("li",{parentName:"ul"},"Build arguments, such as the relevant ",(0,r.kt)("inlineCode",{parentName:"li"},"UPSTREAM_VERSION"),"."),(0,r.kt)("li",{parentName:"ul"},"Defined volumes, ports, and environment variables.")),(0,r.kt)("h3",{id:"notable-features"},"Notable Features"),(0,r.kt)("h4",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All environment variables (",(0,r.kt)("inlineCode",{parentName:"li"},"envs"),") defined in the ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")," file will be visible in the package config post-installation. Users can modify these."),(0,r.kt)("li",{parentName:"ul"},"If the package has a ",(0,r.kt)("inlineCode",{parentName:"li"},"setup-wizard"),', those environment variables not set within it will be hidden by default in the configuration. Users can view these by selecting "Show advanced config".')),(0,r.kt)("h4",{id:"the-upstream_version-argument"},"The ",(0,r.kt)("inlineCode",{parentName:"h4"},"UPSTREAM_VERSION")," Argument"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"UPSTREAM_VERSION")," argument is mandatory if you wish to leverage GitHub actions that automatically create PRs when there's a new release in the upstream repository.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In the Dockerfile, ",(0,r.kt)("inlineCode",{parentName:"p"},"UPSTREAM_VERSION")," is usually declared and used like this:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},"ARG UPSTREAM_VERSION\nFROM consensys/teku:$UPSTREAM_VERSION\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"upstreamVersion")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"upstreamRepo")," fields need to be defined in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dappnode_package.json")," file for the GitHub actions to work. Here is an example:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'{\n  ...\n  "upstreamVersion": "23.8.0",\n  "upstreamRepo": "ConsenSys/teku",\n  ...\n}\n'))),(0,r.kt)("h4",{id:"the-extra_opts-environment-variable"},"The ",(0,r.kt)("inlineCode",{parentName:"h4"},"EXTRA_OPTS")," Environment Variable"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"EXTRA_OPTS")," is an environment variable that allows users to add any flags that might not have been included by default. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Here's a typical use case for ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTRA_OPTS")," in the entrypoint script:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"exec /opt/teku/bin/teku \\\n    --network=prater \\\n    ...(omitting other flags) \\\n    --log-destination=CONSOLE \\\n    $EXTRA_OPTS\n")))))}m.isMDXComponent=!0}}]);