"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[8925],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,a(a({ref:t},c),{},{components:n})):r.createElement(h,a({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6146:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(4137));const o={},a="Optimism Rollup",l={unversionedId:"user/rollups/optimism",id:"user/rollups/optimism",title:"Optimism Rollup",description:"Optimism is Ethereum's Layer 2 solution, leveraging Optimistic Rollups to enhance transaction speeds and lower costs. It conducts transactions off-chain, reconciling final states on the main Ethereum chain, all while preserving compatibility with Ethereum smart contracts.",source:"@site/docs/user/rollups/optimism.md",sourceDirName:"user/rollups",slug:"/user/rollups/optimism",permalink:"/docs/user/rollups/optimism",draft:!1,editUrl:"https://github.com/dappnode/DappnodeDocs/docs/user/rollups/optimism.md",tags:[],version:"current",frontMatter:{},sidebar:"userSidebar",previous:{title:"Ethereum Rollups: An Overview",permalink:"/docs/user/rollups/overview"},next:{title:"Dappnode Monitoring Service (DMS)",permalink:"/docs/user/packages/dms"}},s={},p=[{value:"Setting Up an Optimism Node",id:"setting-up-an-optimism-node",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...o}=e;return(0,i.kt)(u,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"optimism-rollup"},"Optimism Rollup"),(0,i.kt)("p",null,"Optimism is Ethereum's Layer 2 solution, leveraging Optimistic Rollups to enhance transaction speeds and lower costs. It conducts transactions off-chain, reconciling final states on the main Ethereum chain, all while preserving compatibility with Ethereum smart contracts."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Optimism Rollup",src:n(4015).Z,width:"1705",height:"853"})),(0,i.kt)("h2",{id:"setting-up-an-optimism-node"},"Setting Up an Optimism Node"),(0,i.kt)("p",null,"Optimism stands out as the inaugural choice in the Rollups suite. Initiating an Optimism node on Dappnode parallels the familiar Stakers Menu, yet with some distinctions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Utilize an ",(0,i.kt)("inlineCode",{parentName:"li"},"op-node")," client to link with the Optimism Mainnet."),(0,i.kt)("li",{parentName:"ul"},"Employ ",(0,i.kt)("inlineCode",{parentName:"li"},"op-geth")," or the forthcoming ",(0,i.kt)("inlineCode",{parentName:"li"},"op-erigon")," client to bridge your ",(0,i.kt)("inlineCode",{parentName:"li"},"op-node")," to Ethereum's execution layer, echoing the beacon chain/consensus client's role on the mainnet."),(0,i.kt)("li",{parentName:"ul"},"For archive nodes, ",(0,i.kt)("inlineCode",{parentName:"li"},"op-legacy")," is essential for transactions predating the Bedrock upgrade."),(0,i.kt)("li",{parentName:"ul"},"A connection to an Ethereum Mainnet node is required. If your Dappnode already operates one, the Rollups menu will streamline configuration. Otherwise, integrate a public RPC for Ethereum Mainnet connection.")),(0,i.kt)("p",null,"For a deeper dive, consult Optimism\u2019s documentation:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://op-geth.optimism.io/"},"OP Geth docs"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://community.optimism.io/docs/developers/bedrock/node-operator-guide/"},"OP Node Operator")))))}m.isMDXComponent=!0},4015:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/optimism-menu-81343d10c0c7ef3984170845fd2125ae.png"}}]);